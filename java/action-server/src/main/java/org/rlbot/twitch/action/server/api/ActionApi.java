/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.rlbot.twitch.action.server.api;

import org.rlbot.twitch.action.server.model.ActionChoice;
import org.rlbot.twitch.action.server.model.AvailableActions;
import org.rlbot.twitch.action.server.model.ModelApiResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-06-13T09:00:27.900-07:00[America/Los_Angeles]")
@Api(value = "action", description = "the action API")
public interface ActionApi {

    @ApiOperation(value = "", nickname = "chooseAction", notes = "", response = ModelApiResponse.class, tags={ "action", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ModelApiResponse.class),
        @ApiResponse(code = 400, message = "Invalid status value") })
    @RequestMapping(value = "/action/choose",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ModelApiResponse> chooseAction(@ApiParam(value = "Action to choose" ,required=true )  @Valid @RequestBody ActionChoice body
);


    @ApiOperation(value = "", nickname = "getActionsCurrentlyAvailable", notes = "", response = AvailableActions.class, responseContainer = "List", tags={ "action", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = AvailableActions.class, responseContainer = "List") })
    @RequestMapping(value = "/action/currentlyAvailable",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<AvailableActions>> getActionsCurrentlyAvailable();

}
